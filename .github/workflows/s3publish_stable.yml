name: Publish stable and tag on AWS S3 bucket

# Controls when the action will run.
# Trigger the workflow on release activity
on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
        name: 'Set output'
        id: 'vars'

      - uses: actions/checkout@v2
        name: 'checkout code from repos'
        with:
          fetch-depth: 0

      - uses: c-py/action-dotenv-to-setenv@v2
        name: 'set environment vars from .env file'
        with:
          env-file: '.env'

      - uses: actions/setup-python@v2
        name: 'Setup python 3.7'
        with:
          python-version: '3.7'
          architecture: 'x64'

      - uses: actions/cache@v2
        name: 'Load Python cache'
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}

      - run: 'pip install -r requirements.txt'
        name: 'Install requirements'

      - uses: vafinvr/template-env-action@master
        name: 'replace values with env vars in mkdocs.yml'
        with:
          filename: 'mkdocs.yml'

      - run: 'mkdocs build -s'
        name: "Build doc for [${{ env.LANGUAGE }}] ${{ env.STABLE_VERSION }}/${{ steps.vars.outputs.tag }}"

      - uses: jakejarvis/s3-sync-action@master
        name: 'Upload [${{ env.LANGUAGE }}] ${{ env.STABLE_VERSION }} to ${{ env.AWS_S3_BUCKET }} S3'
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ env.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
          SOURCE_DIR: ${{ env.SOURCE_DIR }}
          DEST_DIR: "${{ env.PROJECT }}/${{ env.LANGUAGE }}/${{ env.STABLE_VERSION }}/"

      - uses: jakejarvis/s3-sync-action@master
        name: "Upload [${{ env.LANGUAGE }}] ${{ steps.vars.outputs.tag }}to ${{ env.AWS_S3_BUCKET }} S3"
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ env.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
          SOURCE_DIR: ${{ env.SOURCE_DIR }}
          DEST_DIR: "${{ env.PROJECT }}/${{ env.LANGUAGE }}/${{ steps.vars.outputs.tag }}/"
